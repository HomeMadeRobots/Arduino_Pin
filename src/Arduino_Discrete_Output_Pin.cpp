#include "Arduino_Discrete_Output_Pin.h"


/**************************************************************************************************/
/* Constructor */
Arduino_Discrete_Output_Pin::Arduino_Discrete_Output_Pin( uint8_t an_arduino_pin_id )
{
    this->my_arduino_pin_id = an_arduino_pin_id;
	pinMode(an_arduino_pin_id, OUTPUT);
    this->Discrete_Pin = Discrete_Pin_Class(this);
}
/**************************************************************************************************/


/**************************************************************************************************/
/* Component_Type_Operations */
/**************************************************************************************************/


/**************************************************************************************************/
/* Event reception points accessors */
/**************************************************************************************************/


/**************************************************************************************************/
/* Prodided port accessors */
/**************************************************************************************************/
i_Discrete_Output* Arduino_Discrete_Output_Pin::Get_Port__Discrete_Pin( void )
{
    return (i_Discrete_Output*)&(this->Discrete_Pin);
}
/**************************************************************************************************/


/**************************************************************************************************/
/* Private methods */
/**************************************************************************************************/


/**************************************************************************************************/
/* Provided operations */
/**************************************************************************************************/
/* Discrete_Pin:i_Discrete_Output */
void Arduino_Discrete_Output_Pin::Discrete_Pin_Class::Set_Level( E_IO_LEVEL level )
{
    if( level==IO_LEVEL_LOW )
	{
		digitalWrite( this->Parent->my_arduino_pin_id, LOW );
	}
	else
	{
		digitalWrite( this->Parent->my_arduino_pin_id, HIGH );
	}
}
/**************************************************************************************************/


/**************************************************************************************************/
/* Received events */
/**************************************************************************************************/
